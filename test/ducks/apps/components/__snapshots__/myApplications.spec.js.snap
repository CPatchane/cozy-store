// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MyApplications component should be rendered correctly if apps uninstalled 1`] = `
<div
  className="sto-myapps"
>
  <div>
    <h2
      className="sto-myapps-title"
    >
      My Applications
    </h2>
    <div
      className="sto-myapps-sections"
    >
      <Wrapper
        apps={
          Array [
            Object {
              "developer": Object {
                "name": "Cozy",
              },
              "editor": "Cozy",
              "icon": "<svg></svg>",
              "installed": true,
              "isInRegistry": true,
              "name": "Collect",
              "name_prefix": "Cozy",
              "related": "http://collect.cozy.mock/",
              "slug": "collect",
              "type": "webapp",
              "uninstallable": false,
              "version": "3.0.0",
              "versions": Object {
                "beta": Array [
                  "3.0.0",
                ],
                "dev": Array [
                  "3.0.0",
                ],
                "stable": Array [
                  "3.0.0",
                ],
              },
            },
            Object {
              "developer": Object {
                "name": "Cozy",
              },
              "editor": "Cozy",
              "icon": "<svg></svg>",
              "installed": true,
              "name": "Drive",
              "name_prefix": "Cozy",
              "related": "http://drive.cozy.mock/",
              "slug": "drive",
              "type": "webapp",
              "uninstallable": false,
              "version": "3.0.0-beta89bnhj3993",
            },
          ]
        }
        error={null}
      />
    </div>
  </div>
  <withRouter(ApplicationRouting)
    actionError={null}
    installApp={undefined}
    installedApps={
      Array [
        Object {
          "developer": Object {
            "name": "Cozy",
          },
          "editor": "Cozy",
          "icon": "<svg></svg>",
          "installed": true,
          "isInRegistry": true,
          "name": "Collect",
          "name_prefix": "Cozy",
          "related": "http://collect.cozy.mock/",
          "slug": "collect",
          "type": "webapp",
          "uninstallable": false,
          "version": "3.0.0",
          "versions": Object {
            "beta": Array [
              "3.0.0",
            ],
            "dev": Array [
              "3.0.0",
            ],
            "stable": Array [
              "3.0.0",
            ],
          },
        },
        Object {
          "developer": Object {
            "name": "Cozy",
          },
          "editor": "Cozy",
          "icon": "<svg></svg>",
          "installed": true,
          "name": "Drive",
          "name_prefix": "Cozy",
          "related": "http://drive.cozy.mock/",
          "slug": "drive",
          "type": "webapp",
          "uninstallable": false,
          "version": "3.0.0-beta89bnhj3993",
        },
      ]
    }
    isFetching={false}
    parent="myapps"
    uninstallApp={[MockFunction]}
  />
</div>
`;

exports[`MyApplications component should display error from props correctly 1`] = `
<div
  className="sto-myapps"
>
  <div>
    <h2
      className="sto-myapps-title"
    >
      My Applications
    </h2>
    <div
      className="sto-myapps-sections"
    >
      <Wrapper
        apps={Array []}
        error={[Error: This is a test error]}
      />
    </div>
  </div>
  <withRouter(ApplicationRouting)
    actionError={null}
    installApp={undefined}
    installedApps={Array []}
    isFetching={false}
    parent="myapps"
    uninstallApp={[MockFunction]}
  />
</div>
`;

exports[`MyApplications component should render correctly a spinner if apps is fetching 1`] = `
<div
  className="sto-myapps"
>
  <div>
    <h2
      className="sto-myapps-title"
    >
      My Applications
    </h2>
    <div
      className="sto-myapps-sections"
    />
  </div>
  <withRouter(ApplicationRouting)
    actionError={null}
    installApp={undefined}
    installedApps={Array []}
    isFetching={true}
    parent="myapps"
    uninstallApp={[MockFunction]}
  />
  <Wrapper
    loadingType="appsFetching"
    middle="true"
    size="xxlarge"
  />
</div>
`;

exports[`MyApplications component should render only routing if path not exactly match /myapps 1`] = `
<div
  className="sto-myapps"
>
  <withRouter(ApplicationRouting)
    actionError={null}
    installApp={undefined}
    installedApps={
      Array [
        Object {
          "developer": Object {
            "name": "Cozy",
          },
          "editor": "Cozy",
          "icon": "<svg></svg>",
          "installed": true,
          "isInRegistry": true,
          "name": "Collect",
          "name_prefix": "Cozy",
          "related": "http://collect.cozy.mock/",
          "slug": "collect",
          "type": "webapp",
          "uninstallable": false,
          "version": "3.0.0",
          "versions": Object {
            "beta": Array [
              "3.0.0",
            ],
            "dev": Array [
              "3.0.0",
            ],
            "stable": Array [
              "3.0.0",
            ],
          },
        },
        Object {
          "developer": Object {
            "name": "Cozy",
          },
          "editor": "Cozy",
          "icon": "<svg></svg>",
          "installed": true,
          "name": "Drive",
          "name_prefix": "Cozy",
          "related": "http://drive.cozy.mock/",
          "slug": "drive",
          "type": "webapp",
          "uninstallable": false,
          "version": "3.0.0-beta89bnhj3993",
        },
      ]
    }
    isFetching={false}
    parent="myapps"
    uninstallApp={[MockFunction]}
  />
</div>
`;
