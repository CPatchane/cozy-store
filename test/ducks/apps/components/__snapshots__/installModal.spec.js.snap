// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InstallModal component should be rendered correctly if app found 1`] = `
<div
  className="sto-modal--install"
>
  <Unknown
    mobileFullscreen={true}
    secondaryAction={[Function]}
  >
    <ModalContent>
      <Wrapper
        app={
          Object {
            "categories": Array [
              "cozy",
            ],
            "developer": Object {
              "name": "Cozy",
            },
            "editor": "Cozy",
            "icon": "<svg></svg>",
            "isInRegistry": true,
            "name": "Photos",
            "name_prefix": "Cozy",
            "slug": "photos",
            "type": "webapp",
            "uninstallable": true,
            "versions": Object {
              "beta": Array [
                "3.0.0",
              ],
              "dev": Array [
                "3.0.0",
              ],
              "stable": Array [
                "3.0.0",
              ],
            },
          }
        }
        installApp={undefined}
        isInstalling={undefined}
        onCancel={[Function]}
        onSuccess={[Function]}
      />
    </ModalContent>
  </Unknown>
</div>
`;

exports[`InstallModal component should be rendered correctly with also app in registry 1`] = `
<div
  className="sto-modal--install"
>
  <Unknown
    mobileFullscreen={true}
    secondaryAction={[Function]}
  >
    <ModalContent>
      <Wrapper
        app={
          Object {
            "categories": Array [
              "cozy",
            ],
            "developer": Object {
              "name": "Cozy",
            },
            "editor": "Cozy",
            "icon": "<svg></svg>",
            "isInRegistry": true,
            "langs": Array [
              "en",
              "fr",
            ],
            "licence": "AGPL-3.0",
            "locales": Object {
              "en": Object {
                "changes": "### NEW!!!

 Now on the cozy-store :tada",
                "long_description": "### Features

Enjoy features to grab your data in you Cozy :tada:",
                "short_description": "Gestionnaire de photos pour Cozy v3",
              },
              "fr": Object {
                "long_description": "### Photos

Gestionnaire de photos pour Cozy v3 :tada:",
                "short_description": "Gestionnaire de photos pour Cozy v3",
              },
            },
            "name": "Photos",
            "name_prefix": "Cozy",
            "permissions": Object {
              "albums": Object {
                "description": "Required to manage photos albums",
                "methods": Array [
                  "GET",
                  "POST",
                  "PUT",
                ],
                "type": "io.cozy.photos.albums",
              },
              "apps": Object {
                "description": "Required by the cozy-bar to display the icons of the apps",
                "type": "io.cozy.apps",
                "verbs": Array [
                  "GET",
                ],
              },
              "contacts": Object {
                "description": "Required to to share photos with your contacts",
                "methods": Array [
                  "GET",
                  "POST",
                ],
                "type": "io.cozy.contacts",
              },
              "files": Object {
                "description": "Required for photo access",
                "methods": Array [
                  "GET",
                  "POST",
                  "PUT",
                ],
                "type": "io.cozy.files",
              },
              "settings": Object {
                "description": "Required by the cozy-bar to display Claudy and know which applications are coming soon",
                "type": "io.cozy.settings",
                "verbs": Array [
                  "GET",
                ],
              },
            },
            "platforms": Array [
              Object {
                "type": "ios",
                "url": "",
              },
              Object {
                "type": "linux",
                "url": "",
              },
              Object {
                "type": "android",
                "url": "https://mock.app",
              },
            ],
            "routes": Object {
              "/": Object {
                "folder": "/",
                "index": "index.html",
                "public": false,
              },
              "/public": Object {
                "folder": "/public",
                "index": "index.html",
                "public": true,
              },
            },
            "short_description": "Photos manager for Cozy v3",
            "slug": "photos",
            "source": "https://github.com/cozy/cozy-drive.git@build-photos",
            "type": "webapp",
            "uninstallable": true,
            "version": "3.0.0",
            "versions": Object {
              "beta": Array [
                "3.0.0",
              ],
              "dev": Array [
                "3.0.0",
              ],
              "stable": Array [
                "3.0.0",
              ],
            },
          }
        }
        installApp={undefined}
        isInstalling={undefined}
        onCancel={[Function]}
        onSuccess={[Function]}
      />
    </ModalContent>
  </Unknown>
</div>
`;

exports[`InstallModal component should handle correctly fetchError from props 1`] = `
<div
  className="sto-modal--install"
>
  <Unknown
    mobileFullscreen={true}
    secondaryAction={[Function]}
  >
    <ModalContent>
      <Wrapper
        app={
          Object {
            "categories": Array [
              "cozy",
            ],
            "developer": Object {
              "name": "Cozy",
            },
            "editor": "Cozy",
            "icon": "<svg></svg>",
            "isInRegistry": true,
            "name": "Photos",
            "name_prefix": "Cozy",
            "slug": "photos",
            "type": "webapp",
            "uninstallable": true,
            "versions": Object {
              "beta": Array [
                "3.0.0",
              ],
              "dev": Array [
                "3.0.0",
              ],
              "stable": Array [
                "3.0.0",
              ],
            },
          }
        }
        installApp={undefined}
        isInstalling={undefined}
        onCancel={[Function]}
        onSuccess={[Function]}
      />
    </ModalContent>
  </Unknown>
</div>
`;

exports[`InstallModal component should handle correctly installError from props 1`] = `
<div
  className="sto-modal--install"
>
  <Unknown
    mobileFullscreen={true}
    secondaryAction={[Function]}
  >
    <ModalContent>
      <Wrapper
        app={
          Object {
            "categories": Array [
              "cozy",
            ],
            "developer": Object {
              "name": "Cozy",
            },
            "editor": "Cozy",
            "icon": "<svg></svg>",
            "isInRegistry": true,
            "name": "Photos",
            "name_prefix": "Cozy",
            "slug": "photos",
            "type": "webapp",
            "uninstallable": true,
            "versions": Object {
              "beta": Array [
                "3.0.0",
              ],
              "dev": Array [
                "3.0.0",
              ],
              "stable": Array [
                "3.0.0",
              ],
            },
          }
        }
        installApp={undefined}
        isInstalling={undefined}
        onCancel={[Function]}
        onSuccess={[Function]}
      />
    </ModalContent>
  </Unknown>
</div>
`;

exports[`InstallModal component should not break the permissions part if no permissions property found in manifest 1`] = `
<div
  className="sto-modal--install"
>
  <Unknown
    mobileFullscreen={true}
    secondaryAction={[Function]}
  >
    <ModalContent>
      <Wrapper
        app={
          Object {
            "categories": Array [
              "cozy",
            ],
            "developer": Object {
              "name": "Cozy",
            },
            "editor": "Cozy",
            "icon": "<svg></svg>",
            "isInRegistry": true,
            "langs": Array [
              "en",
              "fr",
            ],
            "licence": "AGPL-3.0",
            "locales": Object {
              "en": Object {
                "changes": "### NEW!!!

 Now on the cozy-store :tada",
                "long_description": "### Features

Enjoy features to grab your data in you Cozy :tada:",
                "short_description": "Gestionnaire de photos pour Cozy v3",
              },
              "fr": Object {
                "long_description": "### Photos

Gestionnaire de photos pour Cozy v3 :tada:",
                "short_description": "Gestionnaire de photos pour Cozy v3",
              },
            },
            "name": "Photos",
            "name_prefix": "Cozy",
            "platforms": Array [
              Object {
                "type": "ios",
                "url": "",
              },
              Object {
                "type": "linux",
                "url": "",
              },
              Object {
                "type": "android",
                "url": "https://mock.app",
              },
            ],
            "routes": Object {
              "/": Object {
                "folder": "/",
                "index": "index.html",
                "public": false,
              },
              "/public": Object {
                "folder": "/public",
                "index": "index.html",
                "public": true,
              },
            },
            "short_description": "Photos manager for Cozy v3",
            "slug": "photos",
            "source": "https://github.com/cozy/cozy-drive.git@build-photos",
            "type": "webapp",
            "uninstallable": true,
            "version": "3.0.0",
            "versions": Object {
              "beta": Array [
                "3.0.0",
              ],
              "dev": Array [
                "3.0.0",
              ],
              "stable": Array [
                "3.0.0",
              ],
            },
          }
        }
        installApp={undefined}
        isInstalling={undefined}
        onCancel={[Function]}
        onSuccess={[Function]}
      />
    </ModalContent>
  </Unknown>
</div>
`;
